import{useEffect as u,useRef as c}from"react";import{jsx as b}from"react/jsx-runtime";var d=({style:e,className:t,...o})=>{let r=c(null);return u(()=>{if(import("./web.js"),!r.current)return;let{typebot:n,...s}=o;Object.assign(r.current,s,{typebot:n})},[o]),b("typebot-standard",{ref:r,style:e,class:t})};import{useCallback as f,useEffect as p,useRef as l}from"react";import{jsx as P}from"react/jsx-runtime";var y=e=>{let t=l(null),o=l(null),r=f(s=>{let i=document.createElement("typebot-popup");if(o.current=i,n(o.current,s),!t.current){console.warn("Could not attach popup to container because containerRef.current is null");return}t.current?.append(o.current)},[]);p(()=>{o.current||r(e),n(o.current,e)},[r,e]),p(()=>(import("./web.js"),()=>{o.current?.remove(),o.current=null}),[]);let n=(s,i)=>{Object.assign(s,i)};return P("div",{ref:t})};var x=({id:e}={})=>{let t={isFromTypebot:!0,command:"close",id:e};window.postMessage(t)},S=({id:e}={})=>{let t={isFromTypebot:!0,command:"open",id:e};window.postMessage(t)},B=(e,{id:t}={})=>{let o={isFromTypebot:!0,command:"showPreviewMessage",message:e,id:t};window.postMessage(o)},F=({id:e}={})=>{let t={isFromTypebot:!0,command:"toggle",id:e};window.postMessage(t)},z=(e,{id:t}={})=>{let o={isFromTypebot:!0,command:"setInputValue",value:e,id:t};window.postMessage(o)},C=({id:e}={})=>{let t={isFromTypebot:!0,command:"unmount",id:e};window.postMessage(t)},I=(e,{id:t}={})=>{let o={isFromTypebot:!0,command:"setPrefilledVariables",variables:e,id:t};window.postMessage(o)},A=({id:e}={})=>{let t={isFromTypebot:!0,command:"hidePreviewMessage",id:e};window.postMessage(t)},D=(e,{id:t}={})=>{let o={isFromTypebot:!0,command:"sendCommand",text:e,id:t};window.postMessage(o)},V=({id:e}={})=>{let t={isFromTypebot:!0,command:"reload",id:e};window.postMessage(t)},m=(e,{isHidden:t=!1}={})=>t?"0px":e==="large"?"64px":e==="medium"||!e?"48px":typeof e=="string"&&/^\d+px$/.test(e.trim())?e.trim():(console.warn("[Typebot] Invalid button size. Use 'medium', 'large' or an explicit pixel string (e.g. '52px')."),"48px");import{useEffect as a,useMemo as g,useRef as M}from"react";import{jsx as E}from"react/jsx-runtime";var w=e=>{let t=M(null);a(()=>{import("./web.js")},[]),a(()=>{if(e.theme?.position==="static"&&!t.current)return;t.current||(t.current=document.createElement("typebot-bubble"),document.body.prepend(t.current));let{typebot:r,...n}=e;Object.assign(t.current,n,{typebot:r})},[e]),a(()=>()=>{e.theme?.position!=="static"&&(t.current?.remove(),t.current=null)},[e.theme?.position]);let o=g(()=>m(e.theme?.button?.size),[e.theme?.button?.size]);return e.theme?.position==="static"?E("typebot-bubble",{ref:t,style:{display:"inline-flex",width:o,height:o}}):null};export{w as Bubble,y as Popup,d as Standard,x as close,A as hidePreviewMessage,S as open,V as reload,m as resolveButtonSize,D as sendCommand,z as setInputValue,I as setPrefilledVariables,B as showPreviewMessage,F as toggle,C as unmount};
